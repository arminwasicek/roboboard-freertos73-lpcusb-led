/*
 * roboshell.h
 *
 *  Created on: Feb 12, 2013
 *      Author: armin
 */

#ifndef ROBOSHELL_H_
#define ROBOSHELL_H_

#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <string.h>
//#include <portmacro.h>

#include "FreeRTOS.h"
#include "adc.h"
#include "gpio.h"


/********** DEFINITIONS **********************/




/********** TYPE DEFINITIONS **********************/
// argc, argv, outstr, outn
typedef int (*CLI_Command_Callback_t)(int, char**, char*, size_t);


typedef struct command_callback_def
{
	char *command_str;		/* The command that causes pxCommandInterpreter to be executed.  For example "help".  Must be all lower case. */
	char *help_str;			/* String that describes how to use the command.  Should start with the command itself, and end with "\r\n".  For example "help: Returns a list of all the commands\r\n". */
	CLI_Command_Callback_t command_func;		/* A pointer to the callback function that will return the output generated by the command. */
	unsigned int parameter_count;		/* Commands expect a fixed number of parameters, which may be zero. */
} CLI_Command_Callback_Definition_t;


typedef struct command_callback_list_item
{
	CLI_Command_Callback_Definition_t *command;
	struct command_callback_list_item *next;
} CLI_Command_Callback_List_Item_t;





/********** FUNCTION PROTOTYPES **********************/

int CLI_register(CLI_Command_Callback_Definition_t *cd);
int CLI_parse(char *s, char **argv, int *argc, char *buffer);
int CLI_process(int argc, char **argv);

int CMD_read_adc(int argc, char *argv[], char outs[], size_t outl);
int CMD_set_gpio(int argc, char *argv[], char outs[], size_t outl);


#endif /* ROBOSHELL_H_ */
